import fr.avianey.androidsvgdrawable.gradle.SvgDrawableTask

import java.text.SimpleDateFormat

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'androidsvgdrawable'

// START Non-FOSS component
apply plugin: 'io.fabric'
// END Non-FOSS component

buildscript {
    repositories {
        jcenter()
        // START Non-FOSS component
        maven { url 'https://maven.fabric.io/public' }
        // END Non-FOSS component
    }

    dependencies {
        // START Non-FOSS component
        classpath "io.fabric.tools:gradle:${libVersions['FabricPlugin']}"
        // END Non-FOSS component

        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:${libVersions['Kotlin']}"
        classpath "org.jetbrains.kotlin:kotlin-android-extensions:${libVersions['Kotlin']}"
    }
}

android {

    defaultConfig {
        applicationId "de.vanita5.twittnuker"
        minSdkVersion project.properties['overrideMinSdkVersion'] ?: 14
        targetSdkVersion 25
        versionCode 31
        versionName "1.0.0"
        multiDexEnabled true

        buildConfigField 'boolean', 'LEAK_CANARY_ENABLED', 'Boolean.parseBoolean("false")'
        buildConfigField 'boolean', 'SHOW_CUSTOM_TOKEN_DIALOG', 'Boolean.parseBoolean("false")'

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    aaptOptions {
        additionalParameters "--no-version-vectors"
    }
    buildTypes {
        debug {
            minifyEnabled true
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            testProguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro', 'proguard-rules-test.pro'

            SimpleDateFormat format = new SimpleDateFormat("yyyy-MM-dd")
            versionNameSuffix String.format(" (debug %s)", format.format(new Date()))
            resValue("bool", "debug", "true")
        }
        release {
            minifyEnabled true
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            testProguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro', 'proguard-rules-test.pro'
            resValue("bool", "debug", "false")
        }
    }
    sourceSets.each {
        it.res.srcDirs += project.files("src/${it.name}/res-localized")
        it.res.srcDirs += project.files("src/${it.name}/res-svg2png")
        it.java.srcDirs += "src/${it.name}/kotlin"
    }
    lintOptions {
        abortOnError false
        checkReleaseBuilds false
    }
    testOptions {
        unitTests.returnDefaultValues = true
    }

}

repositories {
    mavenLocal()
    jcenter()
    mavenCentral()
    maven {
        url "https://jitpack.io"
    }
    maven { url 'https://s3.amazonaws.com/repo.commonsware.com' }
    // START Non-FOSS component
    maven { url 'https://maven.fabric.io/public' }
    // END Non-FOSS component
    flatDir { dirs "$projectDir/lib" }
}

dependencies {
    kapt "com.bluelinelabs:logansquare-compiler:${libVersions['LoganSquare']}"
    kapt 'com.hannesdorfmann.parcelableplease:processor:1.0.2'
    kapt 'com.google.dagger:dagger-compiler:2.8'
    kapt "com.github.mariotaku.ObjectCursor:processor:${libVersions['ObjectCursor']}"

    compile project(':twittnuker.component.common')

    // START Non-FOSS component
    compile "com.google.android.gms:play-services-auth:${libVersions['PlayServices']}"
    compile "com.google.android.gms:play-services-gcm:${libVersions['PlayServices']}"
    compile("com.crashlytics.sdk.android:crashlytics:${libVersions['Crashlyrics']}@aar") {
        transitive = true
    }
    compile "com.dropbox.core:dropbox-core-sdk:${libVersions['DropboxCoreSdk']}"
    compile("com.google.apis:google-api-services-drive:${libVersions['GoogleDriveApi']}") {
        exclude group: 'org.apache.httpcomponents'
    }
    // END Non-FOSS component

    compile "org.osmdroid:osmdroid-android:${libVersions['OSMDroid']}"

    debugCompile "com.squareup.leakcanary:leakcanary-android:${libVersions['LeakCanary']}"
    debugCompile('com.jayway.jsonpath:json-path:2.2.0') {
        exclude group: 'net.minidev', module: 'json-smart'
    }

    provided "javax.annotation:jsr250-api:1.0"

    testCompile "junit:junit:4.12"

    androidTestCompile "com.android.support:support-annotations:${libVersions['SupportLib']}"
    androidTestCompile "com.android.support.test:runner:0.5"
    androidTestCompile "com.android.support.test:rules:0.5"

    compile "com.android.support:multidex:1.0.1"
    compile "com.android.support:support-v4:${libVersions['SupportLib']}"
    compile "com.android.support:appcompat-v7:${libVersions['SupportLib']}"
    compile "com.android.support:cardview-v7:${libVersions['SupportLib']}"
    compile "com.android.support:recyclerview-v7:${libVersions['SupportLib']}"
    compile "com.android.support:preference-v7:${libVersions['SupportLib']}"
    compile "com.android.support:preference-v14:${libVersions['SupportLib']}"
    compile "com.android.support:customtabs:${libVersions['SupportLib']}"
    compile "com.android.support:design:${libVersions['SupportLib']}"
    compile "com.android.support:percent:${libVersions['SupportLib']}"
    compile "com.twitter:twitter-text:${libVersions['TwitterText']}"
    compile "com.davemorrissey.labs:subsampling-scale-image-view:3.6.0"
    compile "com.squareup:otto:1.3.8"
    compile "dnsjava:dnsjava:2.1.8"
    compile "com.commonsware.cwac:layouts:0.4.3"
    compile "com.rengwuxian.materialedittext:library:2.1.4"
    compile "com.pnikosis:materialish-progress:1.7"
    compile "com.github.mariotaku:MessageBubbleView:1.6"
    compile "com.github.mariotaku:DragSortListView:0.6.1"
    compile "com.github.uucky:ColorPicker-Android:0.9.7@aar"
    compile "pl.droidsonroids.gif:android-gif-drawable:1.2.3"
    compile "com.sprylab.android.texturevideoview:texturevideoview:1.2.1"
    compile "org.apache.commons:commons-lang3:3.5"
    compile "commons-primitives:commons-primitives:1.0"
    compile "org.apache.james:apache-mime4j-core:${libVersions['Mime4J']}"
    compile "org.apache.james:apache-mime4j-storage:${libVersions['Mime4J']}"
    compile "com.bluelinelabs:logansquare:${libVersions['LoganSquare']}"
    compile "com.soundcloud.android:android-crop:1.0.1@aar"
    compile "com.hannesdorfmann.parcelableplease:annotation:1.0.2"
    compile "com.github.mariotaku:PickNCrop:0.9.21"
    compile "com.github.mariotaku.RestFu:library:${libVersions['RestFu']}"
    compile "com.github.mariotaku.RestFu:okhttp3:${libVersions['RestFu']}"
    compile "com.squareup.okhttp3:okhttp:3.6.0"
    compile "com.lnikkila:extendedtouchview:0.1.0"
    compile "com.google.dagger:dagger:2.8"
    compile "org.attoparser:attoparser:2.0.3.RELEASE"
    compile "com.getkeepsafe.taptargetview:taptargetview:1.8.0"
    compile 'net.ypresto.androidtranscoder:android-transcoder:0.2.0'
    compile "com.google.android.exoplayer:exoplayer:${libVersions['Exoplayer']}"
    compile "com.google.android.exoplayer:extension-okhttp:${libVersions['Exoplayer']}"
    compile 'com.github.bumptech.glide:glide:3.7.0'
    compile 'com.github.bumptech.glide:okhttp3-integration:1.4.0@aar'
    compile 'jp.wasabeef:glide-transformations:2.0.1'
    compile 'info.debatty:java-string-similarity:0.23'

    compile "com.github.mariotaku.MediaViewerLibrary:base:${libVersions['MediaViewerLibrary']}"
    compile "com.github.mariotaku.MediaViewerLibrary:subsample-image-view:${libVersions['MediaViewerLibrary']}"
    compile "com.github.mariotaku:SQLiteQB:0.9.12"
    compile "com.github.mariotaku.ObjectCursor:core:${libVersions['ObjectCursor']}"
    compile "com.github.mariotaku:MultiValueSwitch:0.9.7"
    compile "com.github.mariotaku:AbstractTask:0.9.4"
    compile "com.github.mariotaku.CommonsLibrary:parcel:${libVersions['MariotakuCommons']}"
    compile "com.github.mariotaku.CommonsLibrary:io:${libVersions['MariotakuCommons']}"
    compile "com.github.mariotaku.CommonsLibrary:text:${libVersions['MariotakuCommons']}"
    compile "com.github.mariotaku.CommonsLibrary:text-kotlin:${libVersions['MariotakuCommons']}"
    compile "com.github.mariotaku:KPreferences:0.9.5"
    compile "com.github.mariotaku:Chameleon:0.9.16"

    compile "org.jetbrains.kotlin:kotlin-stdlib:${libVersions['Kotlin']}"
    compile "nl.komponents.kovenant:kovenant:3.3.0"
    compile "nl.komponents.kovenant:kovenant-android:3.3.0"
    compile "nl.komponents.kovenant:kovenant-functional:3.3.0"
    compile "nl.komponents.kovenant:kovenant-combine:3.3.0"

    compile "org.sufficientlysecure:donations:2.5"
    compile "com.squareup.retrofit2:retrofit:2.1.0"
    compile "com.squareup.retrofit2:converter-gson:2.1.0"

    compile "com.klinkerapps:giphy:1.0.3"

    compile fileTree(dir: 'lib', include: ['*.jar'])
}

task svgToDrawable(type: SvgDrawableTask) {
    // specify where to pick SVG from
    from = files('src/main/svg/drawable')
    // specify the android res folder
    to = file('src/main/res-svg2png')
    // create qualified directories if missing
    createMissingDirectories = true
    // override files only if necessary
    overwriteMode = 'ifModified'
    // let generate PNG for the following densities only
    targetedDensities = ['hdpi', 'mdpi', 'xhdpi', 'xxhdpi', 'xxxhdpi']
    // relative path of the file specifying nine patch specs
    ninePatchConfig = file('src/main/svg/drawable/9patch.json')
    // output format of the generated resources
    outputFormat = 'PNG'

    outputType = 'drawable'
}

task svgToMipmap(type: SvgDrawableTask) {
    // specify where to pick SVG from
    from = files('src/main/svg/mipmap')
    // specify the android res folder
    to = file('src/main/res-svg2png')
    // override files only if necessary
    overwriteMode = 'ifModified'
    // let generate PNG for the following densities only
    targetedDensities = ['hdpi', 'mdpi', 'xhdpi', 'xxhdpi', 'xxxhdpi']
    // output format of the generated resources
    outputFormat = 'PNG'

    outputType = 'mipmap'
}

// START Non-FOSS component
apply plugin: 'com.google.gms.google-services'
// END Non-FOSS component